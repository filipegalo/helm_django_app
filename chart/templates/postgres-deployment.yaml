apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-postgres
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
      component: postgres
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
        component: postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "chart.fullname" . }}-postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: {{ .Values.postgres.credentials.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.credentials.username }}
            {{- if .Values.postgres.extraEnv }}
            {{- toYaml .Values.postgres.extraEnv | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.postgres.service.port }}
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.credentials.username }}
            {{- toYaml .Values.postgres.livenessProbe | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgres.credentials.username }}
            {{- toYaml .Values.postgres.readinessProbe | nindent 12 }}
 